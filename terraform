#!/bin/bash

terraform_execute() {
	echo ""
	source terraform.conf 
	local CMD=$1
	local INTERACTIVE=""
	case $CMD in
		console)
			INTERACTIVE="-it"
			;;
	esac
	[[ ! -d $CONFIG_DIR ]] && \
		echo "Config dir [$CONFIG_DIR] doesn't exist. Aborting..." && \
		exit 1
	[[ ! -f $CONFIG_DIR/terraform.tfrc ]] && \
		"Config file [$CONFIG_DIR/terraform.tfrc] doesn't exist. Aborting..." && \
		exit 1
	[[ ! -d $LOG_DIR ]] && mkdir -r $LOG_DIR
	[[ ! -d $DATA_DIR ]] && mkdir -p $DATA_DIR
	[[ ! -d $PLUGIN_CACHE_DIR ]] && mkdir -p $PLUGIN_CACHE_DIR
	echo ""
	docker run \
		$INTERACTIVE \
		--rm \
		-e TF_DATA_DIR=/var/terraform/data \
		-e TF_CLI_CONFIG_FILE=/var/terraform/config/terraform.tfrc \
		-e TF_LOG=$LOG_LEVEL \
		-e TF_LOG_PATH=/var/terraform/log/terraform.log \
		-v $WORK_DIR:/var/terraform/work:rw \
		-v $CONFIG_DIR/terraform.tfrc:/var/terraform/config/terraform.tfrc \
		-v $PLUGIN_CACHE_DIR:/var/terraform/plugin-cache:rw \
		-v $DATA_DIR:/var/terraform/data:rw \
		-v $LOG_DIR:/var/terraform/log:rw \
		-v $AWS_CONFIG_DIR:/root/.aws:ro \
		-v /var/run/docker.sock:/var/run/docker.sock \
		$TERRAFORM_IMAGE $@
	echo "" 
}

CMD=$1
shift 1
ARGS="$@"

[[ -z ${CMD// /} || $CMD == "help" ]] && CMD="-help" 

case $CMD in
	# Main commands
	init|validate|plan|apply|destroy)			;&
	# All other commans
	console|fmt|force-unlock|get|graph|import|login)	;&
	logout|output|providers|refresh|show|state|taint)	;&
	test|untaint|version|workspace|-help|-version)		;&
	aws)
		terraform_execute $CMD $ARGS
		;;
	*)
		echo "Invalid request: [$CMD]"
		exit 1
		;;
esac

#::END::
